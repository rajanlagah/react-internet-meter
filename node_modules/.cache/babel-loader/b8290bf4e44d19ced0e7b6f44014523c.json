{"ast":null,"code":"import _slicedToArray from \"/home/rajan/Documents/Rajan/OpenSource/React/react-internet-speed-meter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nvar styles = {\n  \"alertDangerContainer\": \"_styles-module__alertDangerContainer__1alIC\"\n};\n\nconst Alert = ({\n  txtMainHeading,\n  txtSubHeading,\n  alertStyles,\n  classname: _classname = \"alert-danger\"\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: alertStyles.alertDangerContainer\n  }, /*#__PURE__*/React.createElement(\"span\", null, txtMainHeading), /*#__PURE__*/React.createElement(\"span\", null, txtSubHeading));\n};\n\nconst ReactInternetSpeedMeter = ({\n  txtMainHeading: _txtMainHeading = \"Opps...\",\n  outputType: _outputType = \"alert\",\n  customClassName,\n  txtSubHeading: _txtSubHeading = \"Diconnected from internet\"\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOffline = _useState2[0],\n        setisOffline = _useState2[1];\n\n  window.addEventListener('offline', () => setisOffline(true));\n  window.addEventListener('online', () => setisOffline(false));\n\n  if (isOffline) {\n    if (_outputType == 'alert') {\n      return /*#__PURE__*/React.createElement(Alert, {\n        alertStyles: styles,\n        txtMainHeading: _txtMainHeading,\n        txtSubHeading: _txtSubHeading\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", null, \"Available \", /*#__PURE__*/React.createElement(\"b\", null, \"outputType\"), \" are alert, model and we got \", /*#__PURE__*/React.createElement(\"b\", null, _outputType));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", null, \"online\");\n};\n\nexport { ReactInternetSpeedMeter };","map":{"version":3,"sources":["../src/components/alerts/index.js","../src/index.js"],"names":["Alert","classname","alertStyles","alertDangerContainer","ReactInternetSpeedMeter","txtMainHeading","outputType","txtSubHeading","useState","window","setisOffline"],"mappings":";;;;;;AAGA,MAAMA,KAAK,GAAG,CAAC;AAAA,EAAA,cAAA;AAAA,EAAA,aAAA;AAAA,EAAA,WAAA;AAA0CC,EAAAA,SAAS,EAATA,UAAS,GAAC;AAApD,CAAD,KAAyE;AACnF,SAAA,aACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEC,WAAW,CAACC;AAA5B,GAAA,EAAA,aACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EADJ,cACI,CADJ,EAAA,aAEI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAHR,aAGQ,CAFJ,CADJ;AADJ,CAAA;;MCEaC,uBAAuB,GAAG,CAAC;AACtCC,EAAAA,cAAc,EAAdA,eAAc,GADwB,SAAA;AAEtCC,EAAAA,UAAU,EAAVA,WAAU,GAF4B,OAAA;AAAA,EAAA,eAAA;AAItCC,EAAAA,aAAa,EAAbA,cAAa,GAAC;AAJwB,CAAD,KAIW;AAAA,oBAEbC,QAAQ,CAA3C,IAA2C,CAFK;AAAA;AAAA,QAE1C,SAF0C;AAAA,QAE1C,YAF0C;;AAIhDC,EAAAA,MAAM,CAANA,gBAAAA,CAAAA,SAAAA,EAAmC,MAAKC,YAAY,CAApDD,IAAoD,CAApDA;AACAA,EAAAA,MAAM,CAANA,gBAAAA,CAAAA,QAAAA,EAAkC,MAAKC,YAAY,CAAnDD,KAAmD,CAAnDA;;AAEA,MAAA,SAAA,EAAa;AACX,QAAGH,WAAU,IAAb,OAAA,EAAyB;AACvB,aAAA,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACG,QAAA,WAAW,EADd,MAAA;AAEG,QAAA,cAAc,EAFjB,eAAA;AAGG,QAAA,aAAa,EAAEC;AAHlB,OAAA,CAAP;AAID;;AAED,WAAA,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAA,YAAA,EAAA,aAAe,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAAf,YAAe,CAAf,EAAA,+BAAA,EAAA,aAA6D,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAApE,WAAoE,CAA7D,CAAP;AACD;;AACD,SAAA,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAP,QAAO,CAAP;AArBK,C","sourcesContent":["import React from 'react' \n\n\nconst Alert = ({txtMainHeading,txtSubHeading,alertStyles,classname=\"alert-danger\"}) => {\n    return (\n        <div className={alertStyles.alertDangerContainer}>\n            <span>{txtMainHeading}</span>\n            <span>{txtSubHeading}</span>\n        </div>\n    )\n}\n\n\nexport {\n    Alert\n}","import React, { useState } from 'react'\nimport styles from './styles.module.css'\n\nimport { Alert } from './components'\n\nexport const ReactInternetSpeedMeter = ({ \n  txtMainHeading=\"Opps...\" ,\n  outputType=\"alert\",\n  customClassName,\n  txtSubHeading=\"Diconnected from internet\" }) => {\n\n  const [ isOffline,setisOffline ] = useState(true)\n\n  window.addEventListener('offline', ()=> setisOffline(true));\n  window.addEventListener('online', ()=> setisOffline(false));\n\n  if(isOffline){\n    if(outputType == 'alert'){\n      return <Alert\n                alertStyles={styles} \n                txtMainHeading={txtMainHeading} \n                txtSubHeading={txtSubHeading } />\n    }\n\n    return <div>Available <b>outputType</b> are alert, model and we got <b>{outputType}</b></div>\n  }\n  return <div>online</div>\n}\n"]},"metadata":{},"sourceType":"module"}